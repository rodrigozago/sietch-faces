version: '3.8'

services:
  # PostgreSQL Database
  postgres:
    image: postgres:15-alpine
    container_name: sietch_faces_db
    restart: unless-stopped
    environment:
      POSTGRES_USER: sietch_user
      POSTGRES_PASSWORD: sietch_password
      POSTGRES_DB: sietch_faces
      PGDATA: /var/lib/postgresql/data/pgdata
    ports:
      - "5432:5432"
    volumes:
      - postgres_data:/var/lib/postgresql/data
      - ./init-db.sql:/docker-entrypoint-initdb.d/init-db.sql
    healthcheck:
      test: ["CMD-SHELL", "pg_isready -U sietch_user -d sietch_faces"]
      interval: 10s
      timeout: 5s
      retries: 5
    networks:
      - sietch_network

  # Sietch Faces API (opcional - descomente para rodar API no Docker)
  # api:
  #   build: .
  #   container_name: sietch_faces_api
  #   restart: unless-stopped
  #   environment:
  #     DATABASE_URL: postgresql://sietch_user:sietch_password@postgres:5432/sietch_faces
  #     UPLOAD_DIR: /app/uploads
  #   ports:
  #     - "8000:8000"
  #   volumes:
  #     - ./uploads:/app/uploads
  #     - ./models:/app/models
  #   depends_on:
  #     postgres:
  #       condition: service_healthy
  #   networks:
  #     - sietch_network

  # pgAdmin - Database Management Interface
  # pgadmin:
  #   image: dpage/pgadmin4:latest
  #   container_name: sietch_faces_pgadmin
  #   restart: unless-stopped
  #   environment:
  #     PGADMIN_DEFAULT_EMAIL: admin@sietch.local
  #     PGADMIN_DEFAULT_PASSWORD: admin
  #     PGADMIN_CONFIG_SERVER_MODE: 'False'
  #   ports:
  #     - "5050:80"
  #   volumes:
  #     - pgadmin_data:/var/lib/pgadmin
  #   depends_on:
  #     - postgres
  #   networks:
  #     - sietch_network

volumes:
  postgres_data:
    driver: local
  pgadmin_data:
    driver: local

networks:
  sietch_network:
    driver: bridge
    name: sietch_faces_network
